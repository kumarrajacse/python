Say you have a list of lists where each value in the inner lists is a one-character string, like this:
grid = [['.', '.', '.', '.', '.', '.'],
 ['.', 'O', 'O', '.', '.', '.'],
 ['O', 'O', 'O', 'O', '.', '.'],
 ['O', 'O', 'O', 'O', 'O', '.'],
 ['.', 'O', 'O', 'O', 'O', 'O'],
 ['O', 'O', 'O', 'O', 'O', '.'],
 ['O', 'O', 'O', 'O', '.', '.'],
 ['.', 'O', 'O', '.', '.', '.'],
 ['.', '.', '.', '.', '.', '.']]

You can think of grid[x][y] as being the character at the x- and y-coordinates of a “picture”
 drawn with text characters. The (0, 0) origin will be in the upper-left corner, 
the x-coordinates increase going right, and the y-coordinates increase going down.

Copy the previous grid value, and write code that uses it to print the image.

..OO.OO..
.OOOOOOO.
.OOOOOOO.
..OOOOO..
...OOO...
....O....






Hint: You will need to use a loop in a loop in order to print grid[0][0], 
then grid[1][0], then grid[2][0], and so on, up to grid[8][0]. 
This will finish the first row, so then print a newline. Then your program should print grid[0][1], then grid[1][1], then grid[2][1], and so on. The last thing your program will print is grid[8][5]. Also, remember to pass the end keyword argument to print() if you
don’t want a newline printed automatically after each print() call.



Ans:
#First I copied the grid as the author instructs

grid = [['.','.','.','.','.','.'],
       ['.','0','0','.','.','.'],
       ['0','0','0','0','.','.'],
       ['0','0','0','0','0','.'],
       ['.','0','0','0','0','0'],
       ['0','0','0','0','0','.'],
       ['0','0','0','0','.','.'],
       ['.','0','0','.','.','.'],
       ['.','.','.','.','.','.']]

# I set two global variables x and y. I will use x to iterate through 
# the while loop and y to increment the index in the inner list
x = 0
y = 0

# set the condition for the while loop to limit it to the length of the list
# and also to limit it to the length of the inner list which doesn't exceed index 5 

while x < len(grid) and y <= 5:
   for item in range(len(grid)):
        print(grid[item][y], end='')

    y += 1 # increment y after iteration of a for loop 
    print('') # print blank line
    x += 1 # increment x after iteration of for loop go through for loop again


Aleternate so;ution using zip(*grid)
print('\n'.join(map(''.join, zip(*grid))))

